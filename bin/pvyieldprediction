#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""    
    Predicts the yield of photovoltaic energy systems by a given solar irradiance forecast
    
"""
import os
from pvprediction import tools

from configparser import ConfigParser

import numpy as np
import pvprediction as pv


def main(args=None):
    here = os.path.abspath(os.path.dirname(__file__))
    args = tools.get_parser().parse_args()
    
    forecastfile = args.forecastfile
    if (args.forecastdir != None):
        forecastdir = args.forecastdir
    else:
        forecastdir = os.path.join(os.path.dirname(here), 'forecast')
    
    settingsfile = os.path.join(os.path.dirname(here), 'conf', 'settings.cfg')
    settings = ConfigParser()
    settings.read(settingsfile)
    
    if(forecastfile == None):
        forecast = pv.forecast.latest(forecastdir, settings.get("Location","key"), settings.get('Location','timezone'))
    else:
        forecast = pv.forecast.read(forecastfile, settings.get('Location','timezone'))
    
    
    optimize = args.optimize == None or args.optimize.lower() != 'false'
    yieldprediction = pv.predict.energy(forecast, optimize)
    
    
    if (args.simulationdir != None):
        simulationdir = args.simulationdir
    else:
        simulationdir = os.path.join(os.path.dirname(here), 'simulation')
    
    simulationname = forecast.id + '_SimulatedEnergy.csv';
    simulationfile = os.path.join(simulationdir, simulationname)
    
    yieldprediction.index = yieldprediction.index.astype(np.int64)//10**6
    yieldprediction.index.name = 'time'
    yieldprediction.to_csv(simulationfile, sep=',', encoding='utf-8')


if __name__ == "__main__":
    main()